# required: ID of this autoscaler. This ID must be unique in an AWS account and redis DB
ID: sample
# required: Filters to find working instances
WorkingInstanceFilters:
  - Name: tag:Role
    Values: ["spotscaler-sample"]
  - Name: tag:Status
    Values: ["working"]
# required
InstanceTypes:
  - InstanceTypeName: c4.large
    Capacity: 8
    BiddingPrice: 0.101
  - InstanceTypeName: m4.large
    Capacity: 6.5
    BiddingPrice: 0.174
# required: Configuration to launch new instances
LaunchConfiguration:
  Subnets:
    - SubnetID: subnet-abc
      AvailabilityZone: ap-northeast-1b
  BlockDeviceMappings:
    - DeviceName: /dev/sda1
      EBS:
        DeleteOnTermination: true
        VolumeSize: 30
        VolumeType: gp2
  KeyName: "your-key"
  SecurityGroupIDs:
    - sg-dummy
  IAMInstanceProfileName: YourRole
  UserData: |
    #!/bin/sh
    set -e
    apt-get update
    apt-get -y install awscli
    aws --region ap-northeast-1 ec2 create-tags --resources $(curl http://169.254.169.254/latest/meta-data/instance-id) --tags Key=Status,Value=working Key=Role,Value=spotscaler-sample
# required: Hostname of Redis DB
RedisHost: localhost:6379
# required: Duration to avoid any scaling activity after a scaling activity
Cooldown: 5m
# required: Tags to terminate instances
TerminateTags:
  Status: terminating
# required: Command to get AMI ID to launch new instances
AMICommand:
  Command: echo
  Args: ["-n", "ami-a21529cc"]
# required: Key of capacity tag
CapacityTagKey: Weight
# optional: Tags new instances have
InstanceTags:
  foo: bar
# optional: Commands executed at some hook timings
HookCommands:
  - Command: cat
    Args: []
# optional: Commands executed after some activity
Timers:
  Hello:
    Command:
      Command: echo
      Args: ["Hello"]
    After: LaunchingInstances
    Duration: 2m
# required
MaxCPUUtil: 80
# required
ScaleInThreshold: 60
# required
MaxTerminatedVarieties: 2
# required
CPUUtilCommand:
  Command: "echo"
  Args: ["ami-abc"]
# optional
HTTPAddr: ":8080"
