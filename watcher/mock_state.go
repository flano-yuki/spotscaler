// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ryotarai/spotscaler/state (interfaces: State)

package watcher

import (
	gomock "github.com/golang/mock/gomock"
	state "github.com/ryotarai/spotscaler/state"
)

// Mock of State interface
type MockState struct {
	ctrl     *gomock.Controller
	recorder *_MockStateRecorder
}

// Recorder for MockState (not exported)
type _MockStateRecorder struct {
	mock *MockState
}

func NewMockState(ctrl *gomock.Controller) *MockState {
	mock := &MockState{ctrl: ctrl}
	mock.recorder = &_MockStateRecorder{mock}
	return mock
}

func (_m *MockState) EXPECT() *_MockStateRecorder {
	return _m.recorder
}

func (_m *MockState) UpdateStatus(_param0 *state.Status) error {
	ret := _m.ctrl.Call(_m, "UpdateStatus", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStateRecorder) UpdateStatus(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateStatus", arg0)
}
